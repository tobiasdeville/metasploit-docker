
services:
  pentest-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pentest-environment
    hostname: pentest-box
    stdin_open: true
    tty: true
    networks:
      - pentest-network
    volumes:
      # Persistent storage for Metasploit database and logs
      - metasploit-data:/home/pentester/.msf4
      # Mount for sharing files with host
      - ./shared:/home/pentester/shared
      # Mount for custom wordlists and tools
      - ./wordlists:/home/pentester/wordlists
      # Mount for scan results
      - ./results:/home/pentester/results
      # Mount scripts directory from host (optional additional scripts)
      - ./scripts:/home/pentester/host-scripts:ro
    ports:
      # Metasploit handler ports
      - "4444:4444"
      - "4445:4445"
      # Web service ports
      - "8080:8080"
      - "8443:8443"
      # Additional ports for custom services
      - "9001:9001"
      - "9002:9002"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=msf_database
      - POSTGRES_USER=msf_user
      - POSTGRES_PASSWORD=msf_password
    depends_on:
      postgres:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: false
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: pentest-postgres
    environment:
      - POSTGRES_DB=msf_database
      - POSTGRES_USER=msf_user
      - POSTGRES_PASSWORD=msf_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pentest-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U msf_user -d msf_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Web-based tools
  web-tools:
    image: nginx:alpine
    container_name: pentest-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web-content:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - pentest-network
    restart: unless-stopped

networks:
  pentest-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  metasploit-data:
  postgres-data:
